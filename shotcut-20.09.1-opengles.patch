diff -up shotcut-20.09.01/src/glwidget.cpp.omv~ shotcut-20.09.01/src/glwidget.cpp
--- shotcut-20.09.01/src/glwidget.cpp.omv~	2020-09-28 23:08:29.740167775 +0200
+++ shotcut-20.09.01/src/glwidget.cpp	2020-09-28 23:51:53.504369988 +0200
@@ -940,13 +940,24 @@ void FrameRenderer::showFrame(Mlt::Frame
                 m_imageRequested = false;
                 int imageSizeBytes = width * height * 4;
                 uchar* image = (uchar*) mlt_pool_alloc(imageSizeBytes);
-                QOpenGLFunctions_1_1* f = m_context->versionFunctions<QOpenGLFunctions_1_1>();
+                QOpenGLFunctions f(m_context);
 
-                f->glBindTexture(GL_TEXTURE_2D, *textureId);
-                check_error(f);
-                f->glGetTexImage(GL_TEXTURE_2D, 0, GL_BGRA, GL_UNSIGNED_BYTE, image);
-                check_error(f);
-                f->glBindTexture(GL_TEXTURE_2D, 0);
+                f.glBindTexture(GL_TEXTURE_2D, *textureId);
+                check_error(&f);
+                // FIXME if we have a QOpenGLFunctions_1_1 object somehow
+                // (but that isn't available in a GLES-built Qt...)
+                // we can just
+                //f.glGetTexImage(GL_TEXTURE_2D, 0, GL_BGRA, GL_UNSIGNED_BYTE, image);
+                GLuint fbo;
+                f.glGenFramebuffers(1, &fbo);
+                f.glBindFramebuffer(GL_FRAMEBUFFER, fbo);
+                f.glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, *textureId, 0);
+                f.glReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, image);
+                f.glBindFramebuffer(GL_FRAMEBUFFER, 0);
+                f.glDeleteFramebuffers(1, &fbo);
+
+                check_error(&f);
+                f.glBindTexture(GL_TEXTURE_2D, 0);
 
                 m_image = QImage(width, height, QImage::Format_ARGB32);
                 memcpy(m_image.scanLine(0), image, imageSizeBytes);
