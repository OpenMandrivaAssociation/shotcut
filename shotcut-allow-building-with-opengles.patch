diff -uraN shotcut-22.09.23/src/glwidget.cpp omv-shotcut-22.09.23/src/glwidget.cpp
--- shotcut-22.09.23/src/glwidget.cpp	2022-09-23 22:11:34.000000000 +0200
+++ omv-shotcut-22.09.23/src/glwidget.cpp	2022-09-24 17:34:25.484141819 +0200
@@ -984,13 +984,24 @@
                 m_imageRequested = false;
                 int imageSizeBytes = width * height * 4;
                 uchar *image = (uchar *) mlt_pool_alloc(imageSizeBytes);
-                QOpenGLFunctions_1_1 *f = m_context->versionFunctions<QOpenGLFunctions_1_1>();
+                QOpenGLFunctions f(m_context);
 
-                f->glBindTexture(GL_TEXTURE_2D, *textureId);
-                check_error(f);
-                f->glGetTexImage(GL_TEXTURE_2D, 0, GL_BGRA, GL_UNSIGNED_BYTE, image);
-                check_error(f);
-                f->glBindTexture(GL_TEXTURE_2D, 0);
+               f.glBindTexture(GL_TEXTURE_2D, *textureId);
+               check_error(&f);
+               // FIXME if we have a QOpenGLFunctions_1_1 object somehow
+               // (but that isn't available in a GLES-built Qt...)
+               // we can just
+               //f.glGetTexImage(GL_TEXTURE_2D, 0, GL_BGRA, GL_UNSIGNED_BYTE, image);
+               GLuint fbo;
+               f.glGenFramebuffers(1, &fbo);
+               f.glBindFramebuffer(GL_FRAMEBUFFER, fbo);
+               f.glFramebufferTexture2D(GL_FRAMEBUFFER, GL_COLOR_ATTACHMENT0, GL_TEXTURE_2D, *textureId, 0);
+               f.glReadPixels(0, 0, width, height, GL_RGBA, GL_UNSIGNED_BYTE, image);
+               f.glBindFramebuffer(GL_FRAMEBUFFER, 0);
+               f.glDeleteFramebuffers(1, &fbo);
+
+               check_error(&f);
+               f.glBindTexture(GL_TEXTURE_2D, 0);
 
                 m_image = QImage(width, height, QImage::Format_ARGB32);
                 memcpy(m_image.scanLine(0), image, imageSizeBytes);
